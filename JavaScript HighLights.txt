-------JAVASCRIPT HIGHLIGHTS-------
CHAPTER01.概述

01.JavaScript是由瀏覽器去執行的程式語言，瀏覽器還會位HTML頁面建立可供JS使用的物件模型(ObjectModel)

02.如何將JS加入頁面?
	(1)把<script>放到<head>元素中 
	(2)把<script>放到<body>元素中
	(3)把js獨立到.js中，透過<head>中的<script>做連結，指向JavaScript檔案
	(4)在頁面本文底部引用外部.js檔案(可以在本文載入結束後才運作 jQuery則可以使用$(document).ready(function...))
	
-----------------------------------------------------------------------
CHAPTER02.更進一步

01.JavaScript的比較運算
	JS中有兩種比較運算子"=="以及"==="
	不同之處在於==只在意回傳值是否相等，===則是除了回傳值外其資料型別也要相等
	以下提供一些用例：
	(1)如果比較值可能是 true 或 false 值，請使用 === 而不是 ==。
	(2)如果比較值可能是這些特定值中的任何一個（0、"" 或 [] – 空陣列），請使用 === 而不是 ==
	(3)在任何其他情況下，你都可以安全地使用 ==。它不僅安全，而且還簡化了程式碼並提高了可讀性。
	(4)在判斷是否為NaN時可以使用isNaN(傳入值)函式

-----------------------------------------------------------------------
CHAPTER03.函式

01.參數與引數的探討
	(1)引數不足時，沒對應到的參數為"undefined"
	(2)引數過多時，多餘的引數會被JS忽略
	(3)參數視需求而設置就好，也有很多函式是無參數的

02.可以使用return回傳函式執行的結果

03.變數的作用域(Scope)
	宣告在函式外作為全域變數，宣告在函式內做為區域變數
	其中若是在一個"區塊"以內的話(僅有{}包裹且並非函式內容的區塊)
	(1)var宣告:可以跨區域
	(2)let宣告:限於該區域內
	若是宣告在函式內，則兩者都會是區域變數，變數的作用域影響了變數的生命週期
	
04.當使用了一個沒有宣告過的變數，JS會幫我們進行宣告，此時必定會是"全域變數"！

05.當宣告區域變數時使用了跟全域變數一樣的變數名稱，則限於在該區域內我們只能呼叫到區域變數，不會互相影響

06.全域變數的存活期限跟頁面的存在期限一樣，換句話說在頁面重新整理之後全域變數也會重置

07.js的運作：
	雖然javaScript會從頂部執行到底，但實際上JavaScript會讀取頁面兩次，
	第一次讀取所有的函式定義，第二次開始才著手執行程式碼，所以函式可以放在任何地方
	
08.一些方便自己維護JS的共識：
	(1)全域變數放在頂部
	(2)函式們盡量放在一起，在相同區域
	(3)區域變數宣告在函式頂部(本體內容開頭處)
	
09.當函式執行完return後就會停止執行，return以後的程式碼會被忽略

-----------------------------------------------------------------------
CHAPTER04.陣列

01.可以使用array.length獲得陣列的大小

02.建立空陣列後可以在事後加入資料項，使用arr.push(value)的函式把value加入陣列尾端

03.JavaScript並未要求放入陣列的元素都要式同一型別，但如果這樣做使用時要格外小心

04.如果使用太大或是太小的索引值來存取陣列，都會得到undefined的結果

05.可以使用arr.length取得陣列size作為索引值，找到最後一個元素

06.稀疏陣列:指只有少數索引值有值其他沒有的情況，例如arr[0]=A ,arr[100]=B;只有兩個索引值有值但陣列長度為101

-----------------------------------------------------------------------
CHAPTER05.物件	

01.建立物件
	使用{};包覆，一個屬性使用一組 屬性名:屬性值 構成，屬性間由逗號分隔，範例:
	var object={
		a1:1,
		a2:"AAA",
		a3:false
	};
	也可以建立空物件例如:var emptyObj={};
	後續通過動態的方式做新增
	
02.物件屬性的添加&刪除
	使用點號進行存取，以上面物件object為例:
	object.a1可以取得屬性a1的值，也可以進行賦值做修改
	當存取的屬性不存在物件中時，它可以被直接加入物件，例如:
	object.a4="666"; --> 會直接將666字串賦值給a4屬性並建立之
	
	當要刪除屬性時只要如下操作即可:
	delete object.a4;如此就會刪去a4屬性了
	在被刪除後呼叫a4會傳回undefined
	當屬性被刪除時delete函式會回傳true,失敗回傳false,即使刪除一個不存在的屬性也會回傳true
	